meta {
  name: Get Current User Info
  type: http
  seq: 3
}

get {
  url: {{baseUrl}}/auth/me
  body: none
  auth: bearer
}

auth:bearer {
  token: {{adminToken}}
}

tests {
  test("should return 200", function() {
    expect(res.getStatus()).to.equal(200);
  });
  
  test("should return user data", function() {
    expect(res.getBody()).to.have.property('id');
    expect(res.getBody()).to.have.property('username');
    expect(res.getBody()).to.have.property('role');
    expect(res.getBody()).to.have.property('isActive');
    expect(res.getBody()).to.have.property('mustChangePassword');
  });
  
  test("admin should be active and not need password change", function() {
    expect(res.getBody().isActive).to.be.true;
    expect(res.getBody().mustChangePassword).to.be.false;
  });
}
