meta {
  name: List All Users (Admin)
  type: http
  seq: 1
}

get {
  url: {{baseUrl}}/users
  body: none
  auth: bearer
}

params:query {
  page: 1
  limit: 10
  sortBy: createdAt
  sortOrder: desc
}

auth:bearer {
  token: {{adminToken}}
}

tests {
  test("should return 200", function() {
    expect(res.getStatus()).to.equal(200);
  });
  
  test("should return wrapped response", function() {
    expect(res.getBody()).to.have.property('statusCode', 200);
    expect(res.getBody()).to.have.property('data');
    expect(res.getBody().data).to.have.property('users');
    expect(res.getBody().data).to.have.property('pagination');
  });
  
  test("should return array of users", function() {
    expect(res.getBody().data.users).to.be.an('array');
  });
}
